apply plugin: 'com.android.application'
apply plugin: 'kotlin-android'
apply plugin: 'kotlin-kapt'
apply plugin: 'kotlin-android-extensions'

def configuration = rootProject.ext.configuration
def libraries = rootProject.ext.libraries

android {
    compileSdkVersion configuration.compileSdkVersion

    dataBinding {
        enabled = true
    }

    defaultConfig {
        applicationId configuration.package
        minSdkVersion configuration.minSdkVersion
        targetSdkVersion configuration.targetSdkVersion
        versionCode rootProject.ext.versionCode
        versionName rootProject.ext.versionName

        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
    }

    dataBinding {
        enabled = true
    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }
}

dependencies {
    implementation fileTree(dir: 'libs', include: ['*.jar'])
    implementation "org.jetbrains.kotlin:kotlin-stdlib-jdk7:$kotlin_version"
    implementation "androidx.appcompat:appcompat:${libraries.appcompatVersion}"
    implementation "com.android.support.constraint:constraint-layout:${libraries.appcompatVersion}"

    // dagger
    implementation "com.google.dagger:dagger:${libraries.daggerVersion}"
    implementation "com.google.dagger:dagger-android-support:${libraries.daggerVersion}"
    implementation 'androidx.appcompat:appcompat:1.0.2'
    implementation 'androidx.constraintlayout:constraintlayout:1.1.3'
    kapt "com.google.dagger:dagger-compiler:${libraries.daggerVersion}"
    kapt "com.google.dagger:dagger-android-processor:${libraries.daggerVersion}"

    // ViewModel & LiveData
    implementation "androidx.lifecycle:lifecycle-extensions:${libraries.lifecycleVersion}"
    implementation "androidx.lifecycle:lifecycle-viewmodel-ktx:${libraries.lifecycleVersion}"
    implementation "org.jetbrains.kotlin:kotlin-stdlib-jdk7:$kotlin_version"
    kapt "androidx.lifecycle:lifecycle-compiler:${libraries.lifecycleVersion}"

    // Retrofit & Gson.
    implementation "com.squareup.retrofit2:retrofit:${libraries.retrofitVersion}"
    implementation "com.squareup.retrofit2:converter-gson:${libraries.retrofitVersion}"
    implementation "com.squareup.retrofit2:adapter-rxjava2:${libraries.retrofitVersion}"
    implementation "com.squareup.okhttp3:logging-interceptor:${libraries.okhttpVersion}"

    // RxJava && RxBinding
    implementation "io.reactivex.rxjava2:rxjava:${libraries.rxJava2Version}"
    implementation "io.reactivex.rxjava2:rxandroid:${libraries.rxJava2AndroidVersion}"
    implementation "com.jakewharton.rxbinding3:rxbinding:${libraries.rxBinding}"

    // Coroutines
    implementation "org.jetbrains.kotlinx:kotlinx-coroutines-android:${libraries.coroutinesVersion}"
    implementation "org.jetbrains.kotlinx:kotlinx-coroutines-core:${libraries.coroutinesVersion}"

    // Coroutines & Retrofit Adapter (jakewharton)
    implementation "com.jakewharton.retrofit:retrofit2-kotlin-coroutines-adapter:${libraries.jakewhartonAdapterVersion}"

    // support
    implementation "androidx.recyclerview:recyclerview:${libraries.recyclerViewVersion}"
    implementation "androidx.cardview:cardview:${libraries.cardViewVersion}"

    // glide
    implementation "com.github.bumptech.glide:glide:${libraries.glideVersion}"
    kapt "com.github.bumptech.glide:compiler:${libraries.glideVersion}"

    // Testing
    testImplementation "junit:junit:${libraries.junitVersion}"
    androidTestImplementation "androidx.test:runner:${libraries.androidxTestRunnerVersion}"
    testImplementation "androidx.test.ext:truth:${libraries.truthExtVersion}"
    testImplementation "com.google.truth:truth:${libraries.truthVersion}"
    testImplementation "io.mockk:mockk:${libraries.mockKVersion}"
    testImplementation "com.nhaarman.mockitokotlin2:mockito-kotlin:${libraries.mockitoKotlinVersion}"
    implementation 'com.android.support:mediarouter-v7:28.0.0'
}
